
%%% Preamble Requirements %%%
% \usepackage{geometry}
% \usepackage{amsfonts}
% \usepackage{amsmath}
% \usepackage{amssymb}
% \usepackage{tikz}

% Optional packages such as sfmath set through python interface
% \usepackage{sfmath}

% \usetikzlibrary{arrows,chains,positioning,scopes,shapes.geometric,shapes.misc,shadows}

%%% End Preamble Requirements %%%

\input{"/home/degoede/miniconda3/lib/python3.12/site-packages/pyxdsm/diagram_styles"}
\begin{tikzpicture}

\matrix[MatrixSetup]{
%Row 0
&
&
\node [DataIO] (output_geom) {$\text{draft}$};&
\node [DataIO] (output_desal) {$\begin{array}{c} \eta_{\text{RO}}, \mathbf{p}_{\text{seawater}}, \\ \mathbf{p}_{\text{membrane}} \end{array}$};&
\node [DataIO] (output_hydro) {$\begin{array}{c} \text{draft} \end{array}$};&
\node [DataIO] (output_sysdyn) {$\begin{array}{c} \text{draft}, \ell_2, \ell_3 \end{array}$};&
\node [DataIO] (output_econ) {$\begin{array}{c} C_\text{ref}, \mathbf{p}_{\text{316SS}} \end{array}$};&
\\
%Row 1
\node [DataIO] (left_output_opt) {$\begin{array}{c} w^*,t^*,m^*,\ell_1^*,A_p^*, \\ V_{acc}^*,P_0^*,Q_{p,max}^* \end{array}$};&
\node [Optimization] (opt) {$\text{Genetic Algorithm}$};&
\node [DataInter] (opt-geom) {$w,t,m$};&
\node [DataInter] (opt-desal) {$Q_{p,max}$};&
\node [DataInter] (opt-hydro) {$w,t$};&
\node [DataInter] (opt-sysdyn) {$m,\ell_1,A_p,V_{acc}$};&
\node [DataInter] (opt-econ) {$\begin{array}{c} w,t,\ell_1,A_p, \\ V_{acc},Q_{p,max} \end{array}$};&
\\
%Row 2
&
&
\node [Function] (geom) {$\text{Geometry}$};&
&
\node [DataInter] (geom-hydro) {$\text{cg},V_{WEC},I$};&
\node [DataInter] (geom-sysdyn) {$\text{cg},V_{WEC},I$};&
&
\\
%Row 3
&
&
&
\node [Function] (desal) {$\text{Desalination}$};&
&
\node [DataInter] (desal-sysdyn) {$\begin{array}{c} \Delta \pi, R_m, R_t, \\ P_{relief} \end{array}$};&
\node [DataInter] (desal-econ) {$Q_{f,max}$};&
\\
%Row 4
&
&
&
&
\node [Function] (hydro) {$\text{Hydrodynamics}$};&
\node [DataInter] (hydro-sysdyn) {$\begin{array}{c} f_e(\omega), K_{hs}, \\ A(\omega), B(\omega) \end{array}$};&
&
\\
%Row 5
&
\node [DataInter] (sysdyn-opt) {$\mathbf{g},\mathbf{h}$};&
&
&
&
\node [Function] (sysdyn) {$\text{System Dynamics}$};&
\node [DataInter] (sysdyn-econ) {$Q_{f},Q_{p},\text{stroke}$};&
\\
%Row 6
\node [DataIO] (left_output_econ) {$\text{LCOW}^*$};&
\node [DataInter] (econ-opt) {$\text{LCOW}$};&
&
&
&
&
\node [Function] (econ) {$\text{Economics}$};&
\\
%Row 7
&
&
&
&
&
&
&
\\
};

% XDSM process chains
{ [start chain=process]
 \begin{pgfonlayer}{process} 
\chainin (opt);
\chainin (geom) [join=by ProcessHVA];
\chainin (desal) [join=by ProcessHVA];
\chainin (hydro) [join=by ProcessHVA];
\chainin (sysdyn) [join=by ProcessHVA];
\chainin (econ) [join=by ProcessHVA];
\chainin (opt) [join=by ProcessHVA];
\end{pgfonlayer}
}

\begin{pgfonlayer}{data}
\path
% Horizontal edges
(opt) edge [DataLine] (opt-geom)
(opt) edge [DataLine] (opt-desal)
(opt) edge [DataLine] (opt-hydro)
(opt) edge [DataLine] (opt-sysdyn)
(opt) edge [DataLine] (opt-econ)
(geom) edge [DataLine] (geom-hydro)
(geom) edge [DataLine] (geom-sysdyn)
(desal) edge [DataLine] (desal-econ)
(desal) edge [DataLine] (desal-sysdyn)
(hydro) edge [DataLine] (hydro-sysdyn)
(sysdyn) edge [DataLine] (sysdyn-econ)
(econ) edge [DataLine] (econ-opt)
(sysdyn) edge [DataLine] (sysdyn-opt)
(opt) edge [DataLine] (left_output_opt)
(econ) edge [DataLine] (left_output_econ)
% Vertical edges
(opt-geom) edge [DataLine] (geom)
(opt-desal) edge [DataLine] (desal)
(opt-hydro) edge [DataLine] (hydro)
(opt-sysdyn) edge [DataLine] (sysdyn)
(opt-econ) edge [DataLine] (econ)
(geom-hydro) edge [DataLine] (hydro)
(geom-sysdyn) edge [DataLine] (sysdyn)
(desal-econ) edge [DataLine] (econ)
(desal-sysdyn) edge [DataLine] (sysdyn)
(hydro-sysdyn) edge [DataLine] (sysdyn)
(sysdyn-econ) edge [DataLine] (econ)
(econ-opt) edge [DataLine] (opt)
(sysdyn-opt) edge [DataLine] (opt)
(geom) edge [DataLine] (output_geom)
(desal) edge [DataLine] (output_desal)
(hydro) edge [DataLine] (output_hydro)
(sysdyn) edge [DataLine] (output_sysdyn)
(econ) edge [DataLine] (output_econ);
\end{pgfonlayer}

\end{tikzpicture}
